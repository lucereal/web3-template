/**
 * Contract constants and configurations
 * Auto-generated by generate-constants.ts
 * Generated on: 2025-08-09T02:13:38.323Z
 */

export const CONTRACT_NAME = 'AccessContract';
// Contract version available via VERSION constant
export const CONTRACT_VERSION = 'dynamic'; // Use getContractVersion() for runtime value
export const COMPILER_VERSION = '0.8.24';

// ResourceType enum (matches contract)
export enum ResourceType {
  URL = 0,
  IPFS = 1
}

// Event names for filtering
export const EVENT_NAMES = {
  "AccessPurchased(uint256,address,uint256,uint256)": "AccessPurchased(uint256,address,uint256,uint256)",
  "Initialized(uint64)": "Initialized(uint64)",
  "OwnershipTransferred(address,address)": "OwnershipTransferred(address,address)",
  "ResourceCreated(uint256,address,string,string,string,string,string,uint256,uint256,uint8)": "ResourceCreated(uint256,address,string,string,string,string,string,uint256,uint256,uint8)",
  "Withdrawal(address,uint256)": "Withdrawal(address,uint256)"
} as const;

// Event topic hashes for efficient filtering
export const EVENT_TOPICS = {
  "AccessPurchased(uint256,address,uint256,uint256)": "0x79f205d05e1d9f99a7e4a6d2e5d9fc75c372c7033d239fefe5e5dec18d472bd9",
  "Initialized(uint64)": "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
  "OwnershipTransferred(address,address)": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "ResourceCreated(uint256,address,string,string,string,string,string,uint256,uint256,uint8)": "0xd00b0eccef06959b19bd218ebba7e050d53825f9c816c2ef6c16f5a41f71c2ed",
  "Withdrawal(address,uint256)": "0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65"
} as const;

// Gas limits (estimated based on function complexity)
export const GAS_LIMITS = {
  "buyAccess": 300000,
  "buyerAccess": 300000,
  "createResource": 500000,
  "emergencyDeactivateResource": 150000,
  "hasAccess": 200000,
  "initialize": 500000,
  "nextResourceId": 200000,
  "owner": 200000,
  "renounceOwnership": 200000,
  "resourceExists": 200000,
  "resourceIds": 200000,
  "resources": 200000,
  "sellerBalances": 200000,
  "transferOwnership": 100000,
  "withdraw": 100000
} as const;

// Type helpers
export type EventName = keyof typeof EVENT_NAMES;
export type EventTopic = typeof EVENT_TOPICS[EventName];

// Common constants
export const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';
export const MAX_UINT256 = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';

/**
 * Get contract version from the VERSION constant
 * Usage: const version = await getContractVersion(contractInstance);
 */
export async function getContractVersion(contract: any): Promise<string> {
  try {
    if (typeof contract.VERSION !== 'function') {
      throw new Error('VERSION constant not found on contract instance');
    }
    return await contract.VERSION();
  } catch (error) {
    console.error('Failed to get contract version:', error);
    throw error;
  }
}