import * as fs from "fs";
import * as path from "path";
import { readABI } from "./utils/abi-reader";

async function generateIndex() {
  const { artifact } = await readABI();
  const contractName = artifact.contractName || 'AccessContract';
  
  const content = `/**
 * ${contractName} SDK
 * Auto-generated by generate-index.ts
 * 
 * This package provides TypeScript types, constants, and utilities
 * for interacting with the ${contractName} smart contract.
 */

// Contract constants and metadata
export * from './constants/contract';

// TypeScript type definitions
export * from './types/${contractName}';

// Event decoding utilities
export * from './utils/eventDecoding';

// Raw ABI export for advanced usage
export { default as ABI } from './abi/${contractName}.json';

// Re-export commonly used types for convenience
export type {
  Resource,
  Access,
  AccessContractEvent,
  RawLog
} from './types/${contractName}';

export {
  ResourceType,
  EVENT_NAMES,
  EVENT_TOPICS,
  GAS_LIMITS,
  getContractVersion
} from './constants/contract';

export {
  decodeEvent,
  decodeAccessContractEvent
} from './utils/eventDecoding';
`;
  
  return content;
}

async function saveIndex(content: string) {
  const indexPath = path.join(process.cwd(), "src", "index.ts");
  
  fs.writeFileSync(indexPath, content);
  console.log("💾 Index saved to:", indexPath);
}

async function main() {
  try {
    console.log("🔄 Generating package index...");
    
    const content = await generateIndex();
    await saveIndex(content);
    
    console.log("✅ Package index generated successfully!");
    console.log("\n🎯 Generated:");
    console.log("  - Clean package exports");
    console.log("  - Re-exported common types");
    console.log("  - Raw ABI export");
    console.log("  - Convenience exports");
    
  } catch (error: any) {
    console.error("❌ Generation failed:", error.message);
    process.exitCode = 1;
  }
}

main().catch((error) => {
  console.error("❌ Script failed:", error);
  process.exitCode = 1;
});
